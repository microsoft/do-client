# Pipeline to perform automated github release of our components

# Disable branch and pr triggers - run this manually when ready to publish a new release
trigger:
- none
pr:
- none

pool:
  name: 1es_hosted_pool_ubuntu_1804
  demands: ImageOverride -equals do-adu-build-$(imageVersion)

variables:
  Release.Version: $(release_version)
  Release.PreviousVersion: $(previous_release_version) # Select the previous version, used to generate changelog
  Release.Title: $(title) # title of the release, following <Release.Version> (YYYY-MM-DD) format i.e. v0.6.0 (2021-03-02)
  imageVersion: '0.8.0'
  containerImageVersion: '0.9.0'

parameters:
  - name: SkipPublishing
    displayName: Skip publishing step
    type: boolean
    values:
    - true
    - false
  - name: PublishAsDraft
    displayName: Publish as draft
    type: boolean
    values:
    - true
    - false

stages:
- stage: pre_build
  jobs:
  - job: print_variables
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          echo "Release title: $(Release.Title)"
          echo "Release tag: $(Release.Version)"
          echo "Tag used to generate changelog: $(Release.PreviousVersion)"

- stage: release_build
  jobs:
  - template: templates/release-native-build-steps.yml
    parameters:
      targetOsArch: 'ubuntu1804_x64'
  - template: templates/release-docker-build-steps.yml
    parameters:
      targetOsArch: 'ubuntu1804_arm64'
      imageVersion: ${{variables.containerImageVersion}}
  - template: templates/release-docker-build-steps.yml
    parameters:
      targetOsArch: 'ubuntu2004_x64'
      imageVersion: ${{variables.containerImageVersion}}
  - template: templates/release-docker-build-steps.yml
    parameters:
      targetOsArch: 'ubuntu2004_arm64'
      imageVersion: ${{variables.containerImageVersion}}
  - template: templates/release-docker-build-steps.yml
    parameters:
      targetOsArch: 'ubuntu2204_x64'
      imageVersion: ${{variables.containerImageVersion}}
  - template: templates/release-docker-build-steps.yml
    parameters:
      targetOsArch: 'ubuntu2204_arm64'
      imageVersion: ${{variables.containerImageVersion}}
  - template: templates/release-docker-build-steps.yml
    parameters:
      targetOsArch: 'debian10_arm32'
      imageVersion: ${{variables.containerImageVersion}}
  - template: templates/release-docker-build-steps.yml
    parameters:
      targetOsArch: 'debian10_arm64'
      imageVersion: ${{variables.containerImageVersion}}
  - template: templates/release-docker-build-steps.yml
    parameters:
      targetOsArch: 'debian10_x64'
      imageVersion: ${{variables.containerImageVersion}}
  - template: templates/release-docker-build-steps.yml
    parameters:
      targetOsArch: 'debian11_arm32'
      imageVersion: ${{variables.containerImageVersion}}
  - template: templates/release-docker-build-steps.yml
    parameters:
      targetOsArch: 'debian11_arm64'
      imageVersion: ${{variables.containerImageVersion}}
  - template: templates/release-docker-build-steps.yml
    parameters:
      targetOsArch: 'debian11_x64'
      imageVersion: ${{variables.containerImageVersion}}

- stage: release
  condition: succeeded()
  jobs:
  - job: github_release
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'specific'
        downloadPath: '$(Build.ArtifactStagingDirectory)'

    - task: CmdLine@2
      inputs:
        script: |
          echo "Directory to be published: $(Build.ArtifactStagingDirectory)"
          echo Content to be published:
          ls -lR $(Build.ArtifactStagingDirectory)/**/*.tar
      displayName: Release Information

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: 'sha256sum ./*.tar > ../hashes_sha256.txt'
        workingDirectory: $(Build.ArtifactStagingDirectory)/github-release-artifacts
      displayName: Compute hashes of archive files

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: 'cat ./hashes_sha256.txt'
        workingDirectory: $(Build.ArtifactStagingDirectory)
      displayName: Display hashes of archive files

    - task: GitHubRelease@1
      condition: eq(${{parameters.SkipPublishing}}, false)
      inputs:
        gitHubConnection: 'github_gauth'
        repositoryName: 'microsoft/do-client'
        action: 'create'
        assets: |
          $(Build.ArtifactStagingDirectory)/**/*.tar
          $(Build.ArtifactStagingDirectory)/hashes*.txt
        tagSource: 'userSpecifiedTag'
        tag: '$(Release.Version)'
        title: '$(Release.Title)'
        isPreRelease: true
        isDraft: ${{parameters.PublishAsDraft}}
        changeLogCompareToRelease: 'lastNonDraftReleaseByTag'
        changeLogCompareToReleaseTag: '$(Release.PreviousVersion)'
        changeLogType: 'commitBased'
