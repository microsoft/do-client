# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# The Task 'PublishBuildArtifacts@1' has been converted to an output named '' in the templateContext section.
parameters:
- name: targetOsArch
  type: string
- name: imageVersion
  type: string
jobs:
- job: ${{parameters.targetOsArch}}
  steps:
  - checkout: self
    path: 's'
  - template: /azure-pipelines/build/linux/du/templates/doclient-lite-docker-steps.yml@self
    parameters:
      targetOsArch: ${{parameters.targetOsArch}}
      imageVersion: ${{parameters.imageVersion}}
      config: minsizerel
  - task: CopyFiles@2
    inputs:
      SourceFolder: '/tmp/build-deliveryoptimization-agent-${{parameters.targetOsArch}}/linux-minsizerel'
      Contents: |
        *.deb
      TargetFolder: '/tmp/${{parameters.targetOsArch}}'
      CleanTargetFolder: true
    displayName: 'Copy agent .deb file'
  - template: /azure-pipelines/build/linux/du/templates/dosdkcpp-docker-steps.yml@self
    parameters:
      targetOsArch: ${{parameters.targetOsArch}}
      imageVersion: ${{parameters.imageVersion}}
      config: minsizerel
  - task: CopyFiles@2
    inputs:
      SourceFolder: '/tmp/build-deliveryoptimization-sdk-${{parameters.targetOsArch}}/linux-minsizerel'
      Contents: |
        *.deb
      TargetFolder: '/tmp/${{parameters.targetOsArch}}'
      CleanTargetFolder: false
    displayName: 'Copy sdk .deb files'
  - template: /azure-pipelines/build/linux/du/templates/dopapt-docker-steps.yml@self
    parameters:
      targetOsArch: ${{parameters.targetOsArch}}
      imageVersion: ${{parameters.imageVersion}}
      config: minsizerel
  - task: CopyFiles@2
    inputs:
      SourceFolder: '/tmp/build-deliveryoptimization-plugin-apt-${{parameters.targetOsArch}}/linux-minsizerel'
      Contents: |
        *.deb
      TargetFolder: '/tmp/${{parameters.targetOsArch}}'
      CleanTargetFolder: false
    displayName: 'Copy plugin .deb file'
  # - task: DeleteFiles@1
  #   inputs:
  #     SourceFolder: $(Build.ArtifactStagingDirectory)
  #     Contents: |
  #       **/*
  #   displayName: 'Clean build folder before creating tar file folder'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: /tmp/${{parameters.targetOsArch}}
      includeRootFolder: False
      archiveType: tar
      archiveFile: $(build.ArtifactStagingDirectory)/release-assets/${{parameters.targetOsArch}}-packages.tar
    displayName: 'Create .tar file'
  templateContext:
    outputs:
    - output: pipelineArtifact
      displayName: 'Publish artifacts'
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'drop-${{parameters.targetOsArch}}'
