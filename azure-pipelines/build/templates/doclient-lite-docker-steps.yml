# Template: Steps to build DO Agent using docker to target non-native OS and/or architecture.
# Consume this steps template in one or more jobs by passing in parameter values.

parameters:
- name: targetOsArch    # example: debian9_arm32
  type: string
- name: version
  type: string
- name: config          # debug/release/minsizerel/relwithdebuginfo
  type: string

steps:
- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: doclientcontainerregistry
    repository: $(parameters.targetOsArch)

- task: Docker@2
  displayName: Pull latest build image
  inputs:
    command: pull
    containerRegistry: doclientcontainerregistry
    arguments: 'doclientcontainerregistry.azurecr.io/${{parameters.targetOsArch}}:${{parameters.version}}'

- task: CmdLine@2
  inputs:
    script: 'sudo docker run --rm --entrypoint=python3 -v $(Build.SourcesDirectory):/code -v /tmp/build-deliveryoptimization-agent-${{parameters.targetOsArch}}:/tmp/build-deliveryoptimization-agent doclientcontainerregistry.azurecr.io/${{parameters.targetOsArch}}:latest "/code/build/build.py" "--clean" "--package-for" "DEB" "--config" "${{parameters.config}}" "--project" "agent"'
  displayName: 'Build client-lite ${{parameters.targetOsArch}}-${{parameters.config}}'

- task: CopyFiles@2
  inputs:
    SourceFolder: '/tmp/build-deliveryoptimization-agent-${{parameters.targetOsArch}}/linux-${{parameters.config}}'
    Contents: |
      deliveryoptimization-agent*.deb
    TargetFolder: '$(Build.ArtifactStagingDirectory)/${{parameters.targetOsArch}}-${{parameters.config}}'
    CleanTargetFolder: true
  displayName: 'Populate artifacts staging dir'

- task: CopyFiles@2
  condition: eq('${{parameters.config}}', 'minsizerel')
  inputs:
    SourceFolder: '/tmp/build-deliveryoptimization-agent-${{parameters.targetOsArch}}/linux-${{parameters.config}}'
    Contents: |
      client-lite/deliveryoptimization-agent.dbg
    TargetFolder: '$(Build.ArtifactStagingDirectory)/${{parameters.targetOsArch}}-${{parameters.config}}'
  displayName: 'Populate debug symbols to staging dir'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'deliveryoptimization-agent'
    publishLocation: 'Container'
