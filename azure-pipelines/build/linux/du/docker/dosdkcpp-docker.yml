# Pipeline to build DO C++ SDK using docker to target non-native OS and/or architecture.
# Publishes the binaries + packages as artifacts.

variables:
- name: imageVersion
  value: 0.8.0
- name: containerImageVersion
  value: 0.9.0

# Disable branch and pr triggers - currently run this manually to avoid hogging build machine resources
# Rely on Ubuntu x64 pipeline for CI/CD
trigger:
- none
pr:
- none
schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - develop

parameters:
- name: buildTargets
  displayName: "OS and Architectures to build"
  type: object
  default:
    - debian10_arm32
    - debian10_arm64
    - debian10_x64
    - debian11_arm32
    - debian11_arm64
    - debian11_x64
    - ubuntu1804_arm64
    - ubuntu2004_arm64
    - ubuntu2004_x64
    - ubuntu2204_arm64
    - ubuntu2204_x64

- name: buildConfigurations
  displayName: "Configurations to build"
  type: object
  default:
    - debug
    - minsizerel

pool:
  name: 1es_hosted_pool_ubuntu_1804
  demands: ImageOverride -equals do-adu-build-$(imageVersion)

# Build agents are running Ubuntu 18.04 on x64 architecture, so we don't run unit tests for ARM builds
# (built using docker+QEMU) and other OS builds (test binary dependencies not installed).
jobs:
- ${{ each target in parameters.buildTargets }}:
  - ${{ each config in parameters.buildConfigurations }}:
    - job: ${{ target }}_${{ config }}
      steps:
      - template: '../templates/dosdkcpp-docker-steps.yml'
        parameters:
          targetOsArch: ${{ target }}
          imageVersion: ${{ variables.containerImageVersion }}
          config: ${{ config }}
          skipTests: true
      - publish: $(Build.ArtifactStagingDirectory)
        artifact: 'doclient-drop-${{target}}-${{config}}'
