# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# The Task 'PublishBuildArtifacts@1' has been converted to an output named '' in the templateContext section.
parameters:
- name: targetOsArch
  type: string
- name: config
  type: string
- name: skipTests
  type: boolean
  default: false
steps:
- task: CmdLine@2
  inputs:
    script: 'python3 ./build.py --project agent --cmaketarget deliveryoptimization-agent --config ${{parameters.config}} --package-for DEB --clean'
    workingDirectory: '$(Build.SourcesDirectory)/build'
  displayName: 'Build agent ${{parameters.targetOsArch}}-${{parameters.config}}'
- task: CmdLine@2
  condition: eq('${{parameters.skipTests}}', false)
  inputs:
    script: 'sudo dpkg -i deliveryoptimization-agent*.deb'
    workingDirectory: '/tmp/build-deliveryoptimization-agent/linux-${{parameters.config}}'
  displayName: 'Install agent Debian package'
- task: CmdLine@2
  inputs:
    script: 'python3 ./build.py --project sdk --cmaketarget deliveryoptimization --config ${{parameters.config}} --package-for DEB --clean'
    workingDirectory: '$(Build.SourcesDirectory)/build'
  displayName: 'Build sdk ${{parameters.targetOsArch}}-${{parameters.config}}'
- task: Bash@3
  condition: eq('${{parameters.config}}', 'minsizerel')
  inputs:
    targetType: 'filePath'
    filePath: 'build/scripts/check_binary_size.sh'
    arguments: '596080 /tmp/build-deliveryoptimization-sdk/linux-${{parameters.config}}/sdk-cpp/libdeliveryoptimization.so.*.*.?'
  displayName: 'Limit binary size increase'
- task: CmdLine@2
  condition: eq('${{parameters.skipTests}}', false)
  inputs:
    script: 'sudo dpkg -i libdeliveryoptimization*.deb'
    workingDirectory: '/tmp/build-deliveryoptimization-sdk/linux-${{parameters.config}}'
  displayName: 'Install libdeliveryoptimization Debian Package'
- task: CmdLine@2
  condition: eq('${{parameters.skipTests}}', false)
  inputs:
    script: 'python3 ./build.py --project sdk --cmaketarget deliveryoptimization-sdk-tests --config ${{parameters.config}}'
    workingDirectory: '$(Build.SourcesDirectory)/build'
  displayName: 'Build sdk-cpp tests ${{parameters.targetOsArch}}-${{parameters.config}}'
- task: CmdLine@2
  condition: eq('${{parameters.skipTests}}', false)
  inputs:
    script: 'sudo ./sdk-cpp/tests/deliveryoptimization-sdk-tests'
    workingDirectory: '/tmp/build-deliveryoptimization-sdk/linux-${{parameters.config}}'
  displayName: 'Run unit tests'
- task: CmdLine@2
  condition: eq('${{parameters.skipTests}}', false)
  inputs:
    script: 'sudo dpkg -r libdeliveryoptimization-dev libdeliveryoptimization deliveryoptimization-agent'
  displayName: 'Remove installed packages'
- task: CopyFiles@2
  inputs:
    SourceFolder: '/tmp/build-deliveryoptimization-sdk/linux-${{parameters.config}}'
    Contents: |
      libdeliveryoptimization*
    TargetFolder: '$(Build.ArtifactStagingDirectory)/${{parameters.targetOsArch}}-${{parameters.config}}'
    CleanTargetFolder: true
  displayName: 'Populate artifacts staging dir'
- task: CopyFiles@2
  condition: eq('${{parameters.config}}', 'minsizerel')
  inputs:
    SourceFolder: '/tmp/build-deliveryoptimization-sdk/linux-${{parameters.config}}'
    Contents: |
      sdk-cpp/libdeliveryoptimization*.dbg
    TargetFolder: '$(Build.ArtifactStagingDirectory)/${{parameters.targetOsArch}}-${{parameters.config}}'
  displayName: 'Populate debug symbols to staging dir'